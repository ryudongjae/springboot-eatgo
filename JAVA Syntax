다음 예와 같은 a, b를 변수(variable)라고 한다.
int a;
String b;

$main메소드
main 메소드는 프로그램의 시작을 의미한다. 만약 main 메소드가 없다면 프로그램을 단독으로 수행시킬 수 없다.
main 메소드를 보면 메소드명(main) 앞에 public, static 그리고 void 라는 키워드가 있다. public과 static 그리고 void에 대한 것은 뒤에서 자세하게 다룰 것이다.
메인 메소드는 프로그램 실행시 파라미터를 입력으로 받을 수 있다. 프로그램 실행시 전달되는 파라미터는 메소드의 입력 파라미터 String[] args에 저장된다.
위 Test 클래스를 작성 후 다음과 같이 호출할 수 있을 것이다.


정수
자바의 정수를 표현하기 위한 자료형은 int, long 이다. (byte, short등도 있지만 거의 사용하지 않는다.)
int와 long의 차이는 표현할 수 있는 숫자의 범위이다.

자료형	표현범위
int	-2147483648 ~ 2147483647
long	-9223372036854775808 ~ 9223372036854775807
다음과 같이 사용한다.

int age = 10;
long countOfStar = 8764827384923849L;
long 변수에 값을 대입할 때는 대입하는 숫자 값이 int 자료형의 최대값인 2147483647 보다 큰 경우 8764827384923849L과 같이 L 접미사(또는 소문자 l, 소문자 'l'은 숫자 1과 비슷하게 보이므로 추천하지 않는다.)를 붙여 주어야 한다. 만약 'L'과 같은 접미사를 누락하면 컴파일 에러가 발생한다.

#CHAR
한 개의 문자 값에 대한 자료형은 char 를 이용한다.
다음과 같이 사용한다.
char a1 = 'a';
주의할 점은 위와같이 문자값을 '(단일 인용부호)로 감싸주어야 한다는 점이다.
char 자료형은 사실 프로그램 작성 시 그리 많이 사용되는 편이 아니다. 어쩌면 거의 사용 할 일이 없을 정도로 활용성이 적다.
char는 문자값을 표현하는 방식 때문에 가끔 혼란을 주기도 한다.

문자열이란 문장을 뜻한다. 예를 들어 다음과 같은 것들이 문자열이다.

"Happy Java"
"a"
"123"
자바에서 문자열에 해당하는 자료형은 String 이다.
즉 위 문자열을 자바에서 표현하려면 다음과 같이 사용해야 한다.
String a = "Happy Java";
String b = "a";
String c = "123";
위의 예제는 다음과 같이 표현해도 된다. 1
String a = new String("Happy Java");
String b = new String("a");
String c = new String("123");
new라는 키워드는 객체를 만들 때 사용한다.
"객체"에 대해서는 나중에 자세하게 알아볼 것이다. 앞으로도 "객체"라는 용어가 계속해서 나올텐데 그때까지는 "새로 생성된 자료형" 정도의 의미라고만 알고 있도록 하자.
하지만 보통 문자열을 표현할 때는 가급적 첫번째 방식(literal 표기)을 사용하는 것이 좋다. 첫 번째 처럼 사용하면 가독성에 이점이 있고 컴파일 시 최적화에 도움을 주기 때문이다.

primitive(원시) 자료형
이전에 살펴보았던 int, long, double, float, boolean, char 등을 자바는 primitive 자료형 이라고 부른다. 이런 primitive 자료형은 new 키워드로 생성할 수 없다.

equals
equals는 두개의 문자열이 동일한 값을 가지고 있는지를 비교하여 결과값을 리턴한다.

indexOf
indexOf는 문자열에서 특정 문자가 시작되는 인덱스를 리턴한다.